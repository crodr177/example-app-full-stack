{"ast":null,"code":"var _jsxFileName = \"/Users/cruzrodriguez/Documents/example-app-full-stack/client/src/components/TransitionComponents/RightToLeftTransition/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport { isElementAtPosition } from '../../../utils/helpers';\nimport '../styles.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RightToLeftTransitionComponent = props => {\n  _s();\n\n  const divRef = useRef(null);\n  const [transition, setTransition] = useState(false);\n  useLayoutEffect(() => {\n    if (divRef.current) {\n      window.addEventListener('scroll', () => {\n        if (isElementAtPosition(300, divRef)) {\n          setTransition(true);\n          window.removeEventListener('scroll', () => {\n            isElementAtPosition(300, divRef);\n          });\n        }\n      });\n      return () => {\n        window.removeEventListener('scroll', () => {\n          isElementAtPosition(300, divRef);\n        });\n      };\n    }\n  }, [transition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rtl-comp-container\",\n    className: \"row-direction\",\n    ref: divRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `box-builder right-box ${!transition ? \"\" : \"transition-left\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RightToLeftTransitionComponent, \"49FpkiTMu4oQgAk6QH/BbNRrL4M=\");\n\n_c = RightToLeftTransitionComponent;\nexport default RightToLeftTransitionComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightToLeftTransitionComponent\");","map":{"version":3,"sources":["/Users/cruzrodriguez/Documents/example-app-full-stack/client/src/components/TransitionComponents/RightToLeftTransition/index.tsx"],"names":["useLayoutEffect","useRef","useState","isElementAtPosition","RightToLeftTransitionComponent","props","divRef","transition","setTransition","current","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAkD,OAAlD;AAEA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,OAAO,eAAP;AACA,OAAO,cAAP;;;AAKA,MAAMC,8BAA8B,GAAIC,KAAD,IAAgD;AAAA;;AACrF,QAAMC,MAAM,GAAGL,MAAM,CAAwB,IAAxB,CAArB;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAU,KAAV,CAA5C;AAEAF,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIM,MAAM,CAACG,OAAX,EAAoB;AAClBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACtC,YAAIR,mBAAmB,CAAC,GAAD,EAAMG,MAAN,CAAvB,EAAsC;AACpCE,UAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,UAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,MAAM;AAACT,YAAAA,mBAAmB,CAAC,GAAD,EAAMG,MAAN,CAAnB;AAAiC,WAA7E;AACD;AACF,OALD;AAOA,aAAO,MAAM;AACXI,QAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,MAAM;AAACT,UAAAA,mBAAmB,CAAC,GAAD,EAAMG,MAAN,CAAnB;AAAiC,SAA7E;AACD,OAFD;AAGD;AACF,GAbc,EAaZ,CAACC,UAAD,CAbY,CAAf;AAeA,sBACE;AAAK,IAAA,EAAE,EAAC,oBAAR;AAA6B,IAAA,SAAS,EAAC,eAAvC;AAAuD,IAAA,GAAG,EAAED,MAA5D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,yBAAwB,CAACC,UAAD,GAAc,EAAd,GAAmB,iBAAkB;AAA9E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMH,8B;;KAAAA,8B;AA0BN,eAAeA,8BAAf","sourcesContent":["import { useLayoutEffect, useRef, useState } from 'react';\n\nimport { isElementAtPosition } from '../../../utils/helpers';\n\nimport '../styles.css';\nimport './styles.css';\n\ninterface RightToLeftTransitionComponentProps {\n}\n \nconst RightToLeftTransitionComponent = (props: RightToLeftTransitionComponentProps) => {\n  const divRef = useRef<HTMLDivElement | null>(null);\n  const [transition, setTransition] = useState<boolean>(false);\n\n  useLayoutEffect(() => {\n    if (divRef.current) {\n      window.addEventListener('scroll', () => {\n        if (isElementAtPosition(300, divRef)) {\n          setTransition(true);\n          window.removeEventListener('scroll', () => {isElementAtPosition(300, divRef)});\n        }\n      });\n\n      return () => {\n        window.removeEventListener('scroll', () => {isElementAtPosition(300, divRef)});\n      };\n    }\n  }, [transition]);\n\n  return ( \n    <div id=\"rtl-comp-container\" className=\"row-direction\" ref={divRef}>\n      <div className={`box-builder right-box ${!transition ? \"\" : \"transition-left\"}`}></div>\n    </div> \n  );\n}\n \nexport default RightToLeftTransitionComponent;"]},"metadata":{},"sourceType":"module"}